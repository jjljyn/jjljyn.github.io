[{"title":"Javascript设计模式1 -- 原型模式","url":"/2018/11/06/javascript-design-1/","content":"### 原型模式\n原型模式是一种设计模式，也是一种编程泛型，它构成了JavaScript这门语言的根本。\n\n原型模式的实现关键，是语言本身是否提供了`clone`方法。ECMAScript提供了`Object.create`方法，可以用来克隆对象。代码如下\n```javascript\n// 例如是在写一个飞机大战的游戏\nvar Plane = function () {\n  this.blood = 100;\n  this.attackLevel = 1;\n  this.defenseLevel = 1;\n}\n\nvar plane =  new Plane();\nplane.blood = 500;\nplane.attackLevel = 10;\nplane.defenseLevel = 5;\n\nvar clonePlane = Object.create(plane);\nconsole.log(clonePlane.blood)  // 500\nconsole.log(clonePlane.attackLevel)   // 10\nconsole.log(clonePlane.defenseLevel)  // 5\n```\n在不支持`Object.create`方法的浏览器中，则可以使用以下代码\n```javascript\nObject.create = Object.create || function(obj) {\n  var fn = function() {};\n  fn.prototype = obj;\n  return new fn();\n}\n```\n\n### 原型编程范型的一些规则\nJavaScript本身是一门基于原型的面向对象语言，它的对象系统就是使用原型模式来搭建的。所以原型模式不仅仅是一种设计模式，也是一种编程范型。\n\n原型编程中的一个重要特性，即当对象无法响应某个请求时，会把该请求委托给它自己的原型。\n\n原型编程范型至少包括以下基本规则：\n- 所有数据都是对象\n- 要得到一个对象，不是用过实例化类，而是找到一个对象作为原型并克隆它\n- 对象会记住它的原型\n- 如果对象无法响应某个请求，它会把这个请求委托给自己的原型。\n\n\n\n>`本文内容摘自《Javascript设计模式与实际开发》，如有疑问请评论。`","tags":["JavaScript","设计模式"]},{"title":"新的开始","url":"/2018/11/01/hello-world/","content":"\n### 新的开始\n\n一直想有个地方，专门承载一些自己的小兴趣，记录自己的成长\n\n用过简书，虽然很好的支持Markdown，但是草稿多了搜索是个问题，所以暂时不用了。\n\n用过Evernote，虽然支持多端使用，但是不支持Markdown语法而且太封闭，加上自己又有输出和交流的念头，所以记录项目和写草稿。\n\n那这个个人的小网站就是能满足自己需求的地方。\n\n做技术是一个积累的过程，积累到一定程度是能够输出的，而且也会有及积极输出的欲望。\n\n就目前来说，自己积累沉淀的内容质量并不高，适合自己的方式方法、主题及内容尚未成型\n\n希望能看到内容的朋友能够多多给予意见和建议，以及一些正面反馈。\n\n上小学的时候，学校举办一次自制校报的比赛，我就很没有创意的起名叫做\"杂报\"，\n\n而且用毛笔在中间竖着写下蹩脚的\"杂\"字，看起来就像\"九十八\"。\n\n再加上在注册域名备案时出了点绊子，最后不知道起什么名了，那就按照这个思路给网站起名叫\"杂货铺\"吧，域名就是现在的 [blog.98store.top](https://blog.98store.top) 。\n\n网站内容也打算迎合网站名称，不只局限技术，放一些自己兴趣所在的东西。\n\n不管怎样，还是\n\n# 欢迎您来到杂货铺\n","tags":["归档"],"categories":["归档"]}]