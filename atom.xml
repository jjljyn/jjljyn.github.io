<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>杂货铺</title>
  <icon>https://www.gravatar.com/avatar/78dfb1fb53867356c0a9c9876dee56c6</icon>
  <subtitle>杂 - 九十八的杂</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://jjljyn.github.io/"/>
  <updated>2018-11-06T15:08:31.250Z</updated>
  <id>https://jjljyn.github.io/</id>
  
  <author>
    <name>Junliang Jia</name>
    <email>julianjia1009@gmail.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Javascript设计模式1 -- 原型模式</title>
    <link href="https://jjljyn.github.io/2018/11/06/javascript-design-1/"/>
    <id>https://jjljyn.github.io/2018/11/06/javascript-design-1/</id>
    <published>2018-11-06T14:11:32.000Z</published>
    <updated>2018-11-06T15:08:31.250Z</updated>
    
    <content type="html"><![CDATA[<h3 id="原型模式"><a href="#原型模式" class="headerlink" title="原型模式"></a>原型模式</h3><p>原型模式是一种设计模式，也是一种编程泛型，它构成了JavaScript这门语言的根本。</p><p>原型模式的实现关键，是语言本身是否提供了<code>clone</code>方法。ECMAScript5提供了<code>Object.create</code>方法，可以用来克隆对象。代码如下<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 例如是在写一个飞机大战的游戏</span></span><br><span class="line"><span class="keyword">var</span> Plane = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">this</span>.blood = <span class="number">100</span>;</span><br><span class="line">  <span class="keyword">this</span>.attackLevel = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">this</span>.defenseLevel = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> plane =  <span class="keyword">new</span> Plane();</span><br><span class="line">plane.blood = <span class="number">500</span>;</span><br><span class="line">plane.attackLevel = <span class="number">10</span>;</span><br><span class="line">plane.defenseLevel = <span class="number">5</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> clonePlane = <span class="built_in">Object</span>.create(plane);</span><br><span class="line"><span class="built_in">console</span>.log(clonePlane.blood)  <span class="comment">// 500</span></span><br><span class="line"><span class="built_in">console</span>.log(clonePlane.attackLevel)   <span class="comment">// 10</span></span><br><span class="line"><span class="built_in">console</span>.log(clonePlane.defenseLevel)  <span class="comment">// 5</span></span><br></pre></td></tr></table></figure></p><p>在不支持<code>Object.create</code>方法的浏览器中，则可以使用以下代码<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">Object</span>.create = <span class="built_in">Object</span>.create || <span class="function"><span class="keyword">function</span>(<span class="params">obj</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">var</span> fn = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;&#125;;</span><br><span class="line">  fn.prototype = obj;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> fn();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h3 id="原型编程范型的一些规则"><a href="#原型编程范型的一些规则" class="headerlink" title="原型编程范型的一些规则"></a>原型编程范型的一些规则</h3><p>JavaScript本身是一门基于原型的面向对象语言，它的对象系统就是使用原型模式来搭建的。所以原型模式不仅仅是一种设计模式，也是一种编程范型。</p><p>原型编程中的一个重要特性，即当对象无法响应某个请求时，会把该请求委托给它自己的原型。</p><p>原型编程范型至少包括以下基本规则：</p><ul><li>所有数据都是对象</li><li>要得到一个对象，不是用过实例化类，而是找到一个对象作为原型并克隆它</li><li>对象会记住它的原型</li><li>如果对象无法响应某个请求，它会把这个请求委托给自己的原型。</li></ul><blockquote><p><code>本文内容摘自《Javascript设计模式与实际开发》，如有疑问请评论。</code></p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;原型模式&quot;&gt;&lt;a href=&quot;#原型模式&quot; class=&quot;headerlink&quot; title=&quot;原型模式&quot;&gt;&lt;/a&gt;原型模式&lt;/h3&gt;&lt;p&gt;原型模式是一种设计模式，也是一种编程泛型，它构成了JavaScript这门语言的根本。&lt;/p&gt;
&lt;p&gt;原型模式的实现关键，是
      
    
    </summary>
    
    
      <category term="JavaScript" scheme="https://jjljyn.github.io/tags/JavaScript/"/>
    
      <category term="设计模式" scheme="https://jjljyn.github.io/tags/%E8%AE%BE%E8%AE%A1%E6%A8%A1%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>新的开始</title>
    <link href="https://jjljyn.github.io/2018/11/01/hello-world/"/>
    <id>https://jjljyn.github.io/2018/11/01/hello-world/</id>
    <published>2018-10-31T16:31:11.863Z</published>
    <updated>2018-10-31T16:31:11.863Z</updated>
    
    <content type="html"><![CDATA[<h3 id="新的开始"><a href="#新的开始" class="headerlink" title="新的开始"></a>新的开始</h3><p>一直想有个地方，专门承载一些自己的小兴趣，记录自己的成长</p><p>用过简书，虽然很好的支持Markdown，但是草稿多了搜索是个问题，所以暂时不用了。</p><p>用过Evernote，虽然支持多端使用，但是不支持Markdown语法而且太封闭，加上自己又有输出和交流的念头，所以记录项目和写草稿。</p><p>那这个个人的小网站就是能满足自己需求的地方。</p><p>做技术是一个积累的过程，积累到一定程度是能够输出的，而且也会有及积极输出的欲望。</p><p>就目前来说，自己积累沉淀的内容质量并不高，适合自己的方式方法、主题及内容尚未成型</p><p>希望能看到内容的朋友能够多多给予意见和建议，以及一些正面反馈。</p><p>上小学的时候，学校举办一次自制校报的比赛，我就很没有创意的起名叫做”杂报”，</p><p>而且用毛笔在中间竖着写下蹩脚的”杂”字，看起来就像”九十八”。</p><p>再加上在注册域名备案时出了点绊子，最后不知道起什么名了，那就按照这个思路给网站起名叫”杂货铺”吧，域名就是现在的 <a href="https://blog.98store.top" target="_blank" rel="noopener">blog.98store.top</a> 。</p><p>网站内容也打算迎合网站名称，不只局限技术，放一些自己兴趣所在的东西。</p><p>不管怎样，还是</p><h1 id="欢迎您来到杂货铺"><a href="#欢迎您来到杂货铺" class="headerlink" title="欢迎您来到杂货铺"></a>欢迎您来到杂货铺</h1>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;新的开始&quot;&gt;&lt;a href=&quot;#新的开始&quot; class=&quot;headerlink&quot; title=&quot;新的开始&quot;&gt;&lt;/a&gt;新的开始&lt;/h3&gt;&lt;p&gt;一直想有个地方，专门承载一些自己的小兴趣，记录自己的成长&lt;/p&gt;
&lt;p&gt;用过简书，虽然很好的支持Markdown，但是草稿多
      
    
    </summary>
    
      <category term="归档" scheme="https://jjljyn.github.io/categories/%E5%BD%92%E6%A1%A3/"/>
    
    
      <category term="归档" scheme="https://jjljyn.github.io/tags/%E5%BD%92%E6%A1%A3/"/>
    
  </entry>
  
</feed>
